@using Microsoft.AspNetCore.Identity.UI.V3.Pages.Internal
@using System.Web.Helpers;
@model List<Branch>

@{
    ViewData["Title"] = "Maps";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <style>
    /* Style the links inside the sidenav */
        #mySidenav a {
            position: absolute; /* Position them relative to the browser window */
            left: -1px; /* Position them outside of the screen */
            transition: 0.3s; /* Add transition on hover */
            padding: 5px; /* 15px padding */
            width: 100px; /* Set a specific width */
            text-decoration: none; /* Remove underline */
            font-size: 20px; /* Increase font size */
            color: white; /* White text color */
            border-radius: 0 5px 5px 0; /* Rounded corners on the top right and bottom right side */
        }

        #mySidenav a:hover {
            left: 0; /* On mouse-over, make the elements appear as they should */
        }

        /* The about link: 20px from the top with a green background */
        #about {
            top: 20px;
            background-color: #4CAF50;
        }

        #blog {
            top: 200px;
            background-color: #2196F3; /* Blue */
        }

        #projects {
            top: 140px;
            background-color: #f44336; /* Red */
        }

        #contact {
            top: 200px;
            background-color: #555 /* Light Black */
        }
    </style>
    @*
        <style>
                /* Always set the map height explicitly to define the size of the div
            * element that contains the map. */
                #map {
                    height: 100%;
                }
                /* Optional: Makes the sample page fill the window. */
                html, body {
                    height: 100%;
                    margin: 0;
                    padding: 0;
                }

                #floating-panel {
                    position: absolute;
                    top: 10px;
                    left: 25%;
                    z-index: 5;
                    background-color: #fff;
                    padding: 5px;
                    border: 1px solid #999;
                    text-align: center;
                    font-family: 'Roboto','sans-serif';
                    line-height: 30px;
                    padding-left: 10px;
                }
        </style>
    *@

    @*
        <style type="text/css">
            html {
                height: 100%
            }

            body {
                height: 100%;
                margin: 0;
                padding: 0
            }

            #map {
                height: 100%
            }
        </style>
    *@
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin-top: 28px;
            padding: 0;
        }

        #description {
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
        }

        #infowindow-content .title {
            font-weight: bold;
        }

        #infowindow-content {
            display: none;
        }

        #map #infowindow-content {
            display: inline;
        }

        .pac-card {
            margin: 10px 10px 0 0;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            background-color: #fff;
            font-family: Roboto;
        }

        #pac-container {
            padding-bottom: 12px;
            margin-right: 12px;
        }

        .pac-controls {
            display: inline-block;
            padding: 5px 11px;
        }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 400px;
        }

        #pac-input:focus {
            border-color: #4d90fe;
        }

        #title {
            color: #fff;
            background-color: #4d90fe;
            font-size: 25px;
            font-weight: 500;
            padding: 6px 12px;
        }

        #target {
            width: 345px;
        }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/driver.js/dist/driver.min.css">
}

@section Scripts {
    
    <script src="https://unpkg.com/driver.js/dist/driver.min.js"></script>
    <script>
        const driver = new Driver();
        driver.highlight({
            element: '#blog',
            popover: {
                title: 'Branches List',
                description: 'Click here to view all branches',
                position: 'right'
            }
        });
        driver.start();
    </script>


    <script type="text/javascript" src="https://maps.google.com/maps/api/js?libraries=places&sensor=false&key=AIzaSyC78_KDVSY1e1b2NyPdd-i5-iyhgCKIXSs"></script>

    <script type="text/javascript">

        const myMap = document.getElementById('map');
        const myLatlng = new google.maps.LatLng(28.00232, -26.1845399);
        const mapOptions = {
            zoom: 15,
            center: myLatlng,
            mapTypeId: 'roadmap'
        };
        const map = new google.maps.Map(myMap, mapOptions);

        function setBranches(map) {

            const branches = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

            branches.forEach(function(branch) {
                var contentString = '<div id="content">' +
                    '<div id="siteNotice">' +
                    '</div>' +
                    `<h3 id="firstHeading" class="firstHeading">${branch.Name}</h3>` +
                    '<div id="bodyContent">' +
                    `<p>Email: ${branch.Email}<br />` +
                    `Phone: ${branch.Phone}</p>`;

                if (branch.Services.length <= 0) {
                    contentString += "<h5 style='color: red'>No Services</h5>";
                } else {
                    contentString += `<h5>Services</h5>` +
                        `<ol>`;
                    branch.Services.forEach(function(service) {
                        contentString += `<li><a href='/Branches/${branch.Id}/Services/${service.Id}/Tickets'>${service
                            .Name
                            }</a></li>`;
                    });
                    contentString += `</ol><p><a href="/Branches/${branch.Id}/Services"><i>Please click here to see more details of services.</i></a></p>`;
                }

                contentString += `</div>` +
                    '</div>';

                let infowindow = new google.maps.InfoWindow({
                    content: contentString
                });
                const myLatLng = new google.maps.LatLng(branch.Address.Latitude, branch.Address.Longitude);
                const marker = new google.maps.Marker({
                    position: myLatLng,
                    title: branch.Name,
                    url: `/Branches/${branch.Id}/Services`
                });

                marker.addListener('click',
                    function() {
                        infowindow.open(map, marker);
                    });

                /*
                google.maps.event.addListener(marker, 'click', function() {
                    window.location.href = this.url;
                });
                */

                marker.setMap(map);
            });
        }

        function initialize() {
            const infoWindow = new google.maps.InfoWindow;
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        const m = new google.maps.Marker({
                            position: pos,
                            title: "My Location",
                            icon: new google.maps.MarkerImage('//maps.gstatic.com/mapfiles/mobile/mobileimgs2.png',
                                new google.maps.Size(22, 22),
                                new google.maps.Point(0, 18),
                                new google.maps.Point(11, 11))
                        });

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('<div id="content">' +
                            '<div id="siteNotice">' +
                            '</div>' +
                            '<p>You are here</p>' +
                            '</div>' +
                            '</div>');
                        infoWindow.open(map);
                        map.setCenter(pos);
                        m.setMap(map);

                    },
                    function() {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
            setBranches(map);
        }

        function geocodeAddress(geocoder, resultsMap) {
            var address = document.getElementById('address').value;
            geocoder.geocode({ 'address': address },
                function(results, status) {
                    console.log(status);
                    console.log(results);
                    if (status === 'OK') {
                        resultsMap.setCenter(results[0].geometry.location);
                        var marker = new google.maps.Marker({
                            map: resultsMap,
                            position: results[0].geometry.location
                        });
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
        }

        initialize();

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed',
            function() {
                searchBox.setBounds(map.getBounds());
            });

        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed',
            function() {

                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();

                places.forEach(function(place) {

                    if (!place.geometry) {
                        console.log("Returned place contains no geometry");
                        return;
                    }

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
    </script>

}


<div>
    <input id="pac-input" class="controls form-control py-3 my-2" type="text" placeholder="Search Area"/>
    <div id="map"></div>
</div>
<div id="mySidenav" class="sidenav">
    <a href="/Branches" id="blog">List Branches</a>
</div>
